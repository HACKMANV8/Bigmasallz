[project]
name = "bigmasallz"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    { name = "HACKMAN Team" }
]
keywords = ["synthetic-data", "llm", "mcp", "gemini", "data-generation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]

dependencies = [
    # MCP Server
    "mcp>=1.0.0",
    # Google Gemini API
    "google-generativeai>=0.8.0",
    # API Server
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    # Core dependencies
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    # Data processing
    "pandas>=2.0.0",
    "pyarrow>=15.0.0",
    # Validation
    "email-validator>=2.0.0",
    # Utilities
    "tenacity>=8.0.0",
    "python-dotenv>=1.0.0",
    "langfuse>=2.37.2",
    "pytest>=8.4.2",
    "langchain>=1.0.3",
    "langchain-openai>=1.0.1",
    "chromadb>=0.5.3",
    "sentence-transformers>=3.0.0",
    "json-repair>=0.28.4",
    # Frontend
    "streamlit>=1.39.0",
    "requests>=2.32.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

cloud = [
    "boto3>=1.26.0",  # AWS S3
    "google-cloud-storage>=2.0.0",  # GCS
]

[project.scripts]
synthetic-data-gen = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

